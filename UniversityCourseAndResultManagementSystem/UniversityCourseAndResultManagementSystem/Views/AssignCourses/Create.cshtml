@model UniversityCourseAndResultManagementSystem.Models.AssignCourse
@using Vereyon.Web;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Course Assign to Teacher</h2>


@using (Html.BeginForm())
{
    @Html.RenderFlashMessages()
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null, "--Select Department--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "Teacher", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="TeacherId" name="TeacherId">
                    <option>--Select Teacher--</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreditToBeTaken, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreditToBeTaken, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CreditToBeTaken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RemainingCredit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemainingCredit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RemainingCredit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "Course Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="CourseId" name="CourseId">
                    <option>--Select Course--</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCredit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseCredit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseCredit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Assign" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#DepartmentId").change(function () {
                var deptId = $("#DepartmentId").val();
                var parameter = { departmentId: deptId }

                $("#TeacherId").empty();
                $("#TeacherId").append('<option>--Select Teacher--</option>');


                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeachersByDepartmentId", "AssignCourses")',
                    contentType: "application/json; charset= utf-8",
                    data: JSON.stringify(parameter),
                    success: function (teacherList) {
                        $.each(teacherList, function (key, value) {
                            $("#TeacherId").append('<option value=' + key.TeacherId + '>' + value.TeacherName + '</option>');
                        });
                    }
                });

                $("#CourseId").empty();
                $("#CourseId").append('<option>--Select Course--</option>');

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursesByDepartmentId", "AssignCourses")',
                    contentType: "application/json; charset= utf-8",
                    data: JSON.stringify(parameter),
                    success: function (courseList) {
                        $.each(courseList, function (key, value) {
                            $("#CourseId").append('<option value=' + key.CourseId + '>' + value.CourseName + '</option>');
                        });
                    }


                });
            });


            $("#TeacherId").change(function () {
                var id = $("#TeacherId").val();
                var para = { teacherId: id };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeacherById", "AssignCourses")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(para),
                    dataType: "json",
                    success: function (data) {
                        $("#CreditToBeTaken").val(data.CreditToBeTaken);
                        $("#RemainingCredit").val(data.RemainingCredit);
                    }
                });
            });


            $("#CourseId").change(function() {
                var courseId = $("#CourseId").val();
                var jsnFormatData = { courseId: courseId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCourseById", "AssignCourses")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsnFormatData),
                    dataType: "json",
                    success: function(data) {
                        $("#CourseName").val(data.CourseName);
                        $("#Credit").val(data.Credit);
                    }
                });
            });


        });
    </script>
}
